class Solution:
    def generate(self,candidates,ans,subset,index,target):
        if(target==0):
            ans.append(subset.copy())
            return
        if(index==len(candidates)):
            return
        if(target<0):
            return
        subset.append(candidates[index])
        self.generate(candidates,ans,subset,index,target-candidates[index])
        subset.pop()
        self.generate(candidates,ans,subset,index+1,target)
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        ans=[]
        subset=[]
        index=0
        self.generate(candidates,ans,subset,index,target)
        return ans
        
